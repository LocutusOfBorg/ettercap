From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Tue, 23 Oct 2012 08:54:53 +0100
Subject: spelling

spelling is usefull
---
 CHANGELOG                                          |    2 +-
 README.BUGS                                        |    4 ++--
 contrib/nsis/EttercapNG.nsi                        |    2 +-
 doc/plugins                                        |    4 ++--
 include/ec_log.h                                   |    2 +-
 man/etter.conf.5.in                                |    2 +-
 man/ettercap.8.in                                  |    2 +-
 man/ettercap_curses.8.in                           |    2 +-
 man/ettercap_plugins.8.in                          |    2 +-
 man/etterlog.8.in                                  |    2 +-
 plug-ins/chk_poison/chk_poison.c                   |    2 +-
 plug-ins/pptp_chapms1/pptp_chapms1.c               |    2 +-
 plug-ins/pptp_pap/pptp_pap.c                       |    2 +-
 plug-ins/pptp_reneg/pptp_reneg.c                   |    2 +-
 plug-ins/smb_clear/smb_clear.c                     |    2 +-
 plug-ins/smb_down/smb_down.c                       |    2 +-
 src/dissectors/ec_mountd.c                         |    2 +-
 src/dissectors/ec_portmap.c                        |    2 +-
 src/ec_conntrack.c                                 |    2 +-
 src/ec_packet.c                                    |    2 +-
 src/ec_send.c                                      |    2 +-
 src/interfaces/curses/ec_curses_view_connections.c |    2 +-
 src/protocols/ec_wifi.c                            |    8 ++++----
 utils/etterlog/el_parser.c                         |    2 +-
 24 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index dde8975..17c0ff9 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -521,7 +521,7 @@ NG-0.7.0_pre1    20040415
       + Inet module totally rewritten and redesigned.
       + Downported to 2.0.x Linux Kernels (EXPERIMENTAL)
       + Added support for glibc 2.0.x  2.1.x  2.2.x
-      + Scroll back in sniffing window (*very* *very* usefull !!)
+      + Scroll back in sniffing window (*very* *very* useful !!)
       ! after injection the connections are cleanly RSTted
 
 
diff --git a/README.BUGS b/README.BUGS
index 1151b6a..db7e4e9 100644
--- a/README.BUGS
+++ b/README.BUGS
@@ -28,7 +28,7 @@ If you found a new bug please report it by sending an email to
 
 If you are not able to compile ettercap on your system, please make a bug
 report. In order to help you fix the problem we need the following
-informations:
+information:
 
 1) a description of your operating system (including any patch level)
 
@@ -111,7 +111,7 @@ to make a detailed bug report in order to help us to find the bug and fix it.
    # netstat -rn >> network.txt
    
 
-8) tar all the informations together with the log generated by ettercap:
+8) tar all the information together with the log generated by ettercap:
 
    # tar zcvf bugreport.tar.gz ettercapNG-*-debug.log \
                                offending_packets.pcap \
diff --git a/contrib/nsis/EttercapNG.nsi b/contrib/nsis/EttercapNG.nsi
index 835bc45..daa3747 100644
--- a/contrib/nsis/EttercapNG.nsi
+++ b/contrib/nsis/EttercapNG.nsi
@@ -22,7 +22,7 @@
 ; NOTE: this .NSI script is designed for NSIS v2.0+
 
 ;--------------------------------
-;Version Informations
+;Version Information
 
 !define VER_MAJOR 0
 !define VER_MINOR 7
diff --git a/doc/plugins b/doc/plugins
index 65f6004..53c3058 100644
--- a/doc/plugins
+++ b/doc/plugins
@@ -111,7 +111,7 @@ NOTE:       the plugin system has been modified since ettercap NG 0.7.0, all
       
       HOOK_DECODED      all the packet after the protocol stack parsing and
                         after the dissectors. here you can find interesting
-                        informations such as passwords and fingerprints.
+                        information such as passwords and fingerprints.
       
       HOOK_PRE_FORWARD  right before the forward point. the hook is executed
                         only if it has to be forwarded.
@@ -168,7 +168,7 @@ NOTE:       the plugin system has been modified since ettercap NG 0.7.0, all
       scope.
       
 
-feel free to write an email to the developer to have further informations.
+feel free to write an email to the developer to have further information.
 
 
 EOF
diff --git a/include/ec_log.h b/include/ec_log.h
index 9978614..6a33d13 100644
--- a/include/ec_log.h
+++ b/include/ec_log.h
@@ -107,7 +107,7 @@ struct log_header_info {
    
    u_char fingerprint[FINGER_LEN+1];
 
-   /* account informations */
+   /* account information */
    u_int8 failed;
    struct ip_addr client;
 
diff --git a/man/etter.conf.5.in b/man/etter.conf.5.in
index 5907f44..b240a1e 100644
--- a/man/etter.conf.5.in
+++ b/man/etter.conf.5.in
@@ -214,7 +214,7 @@ want to disable the "dangerous" dissectors all together, set this value to 0.
 .TP
 .B skip_forwarded
 If you set this value to 0 you will sniff even packets forwarded by ettercap
-or by the kernel. It will generate packets duplicates in conjuction with
+or by the kernel. It will generate packets duplicates in conjunction with
 arp mitm method (for example). It could be useful while running ettercap
 in unoffensive mode on a host with more than one network interface
 (waiting for the multiple-interface feature...)   
diff --git a/man/ettercap.8.in b/man/ettercap.8.in
index fb36222..3f22a5a 100644
--- a/man/ettercap.8.in
+++ b/man/ettercap.8.in
@@ -535,7 +535,7 @@ you should set the unoffensive flag.
 .TP
 \fB\-I\fR, \fB\-\-iflist\fR
 This option will print the list of all available network interfaces that can be
-used within ettercap. The option is particulary usefull under windows where the
+used within ettercap. The option is particularly useful under windows where the
 name of the interface is not so obvious as under *nix.
 
 .TP
diff --git a/man/ettercap_curses.8.in b/man/ettercap_curses.8.in
index 8e5eb5c..75b0a3d 100644
--- a/man/ettercap_curses.8.in
+++ b/man/ettercap_curses.8.in
@@ -236,7 +236,7 @@ Displays the connection list. To see detailed information about a connection
 press 'd', or press 'k' to kill it. To see the traffic for a specific connection,
 select it and press enter. Once the two-panel interface is displayed you can
 move the focus with the arrow keys. Press 'j' to switch between joined and
-splitted visualization. Press 'k' to kill the connection. Press 'y' to inject
+split visualization. Press 'k' to kill the connection. Press 'y' to inject
 interactively and 'Y' to inject a file. Note that it is important which panel
 has the focus as the injected data will be sent to that address.
 .br
diff --git a/man/ettercap_plugins.8.in b/man/ettercap_plugins.8.in
index 3c1893b..3d03677 100644
--- a/man/ettercap_plugins.8.in
+++ b/man/ettercap_plugins.8.in
@@ -340,7 +340,7 @@ legal broadcast ARP request (or reply).
 .br
 This plugin is effective only during an arp-posioning session.
 .br
-In conjuction with reply_arp plugin, repoison_arp is a good support for standard
+In conjunction with reply_arp plugin, repoison_arp is a good support for standard
 arp-poisoning mitm method.
 .Sp
 .I example :
diff --git a/man/etterlog.8.in b/man/etterlog.8.in
index 2f545ed..eb47d30 100644
--- a/man/etterlog.8.in
+++ b/man/etterlog.8.in
@@ -39,7 +39,7 @@ system which was used to dump in a single static manner).
 You will be able to dump traffic from only one connection of your choice, from 
 only one or more hosts, print data in hex, ascii, binary etc...
 .Sp
-TIP: All unuseful messages are printed to stderr, so you can save the
+TIP: All non-useful messages are printed to stderr, so you can save the
 output from etterlog with the following command:
 .TP
 \fIetterlog [options] logfile > outfile\fR
diff --git a/plug-ins/chk_poison/chk_poison.c b/plug-ins/chk_poison/chk_poison.c
index 5b7a278..7fe2887 100644
--- a/plug-ins/chk_poison/chk_poison.c
+++ b/plug-ins/chk_poison/chk_poison.c
@@ -162,7 +162,7 @@ static int chk_poison_init(void *dummy)
    if (!poison_any) 
       INSTANT_USER_MSG("chk_poison: No poisoning at all :(\n");   
    else if (poison_full) 
-      INSTANT_USER_MSG("chk_poison: Poisoning process succesful!\n");
+      INSTANT_USER_MSG("chk_poison: Poisoning process successful!\n");
    else 
       SLIST_FOREACH(p, &poison_table, next) {
          for (i=0; i<=1; i++)
diff --git a/plug-ins/pptp_chapms1/pptp_chapms1.c b/plug-ins/pptp_chapms1/pptp_chapms1.c
index 72d6f33..7e0565e 100644
--- a/plug-ins/pptp_chapms1/pptp_chapms1.c
+++ b/plug-ins/pptp_chapms1/pptp_chapms1.c
@@ -111,7 +111,7 @@ static void parse_ppp(struct packet_object *po)
    char tmp[MAX_ASCII_ADDR_LEN];
    u_char *chcode;
 
-   /* It's unuseful to modify packets that won't be forwarded */
+   /* It's not useful to modify packets that won't be forwarded */
    if (!(po->flags & PO_FORWARDABLE)) 
       return; 
 
diff --git a/plug-ins/pptp_pap/pptp_pap.c b/plug-ins/pptp_pap/pptp_pap.c
index 480ec0b..7c06648 100644
--- a/plug-ins/pptp_pap/pptp_pap.c
+++ b/plug-ins/pptp_pap/pptp_pap.c
@@ -107,7 +107,7 @@ static void parse_ppp(struct packet_object *po)
    u_int16 *option;
    char tmp[MAX_ASCII_ADDR_LEN];
    
-   /* It's unuseful to modify packets that won't be forwarded */
+   /* It's not useful to modify packets that won't be forwarded */
    if (!(po->flags & PO_FORWARDABLE)) 
       return; 
 
diff --git a/plug-ins/pptp_reneg/pptp_reneg.c b/plug-ins/pptp_reneg/pptp_reneg.c
index d31c2d1..776d9ca 100644
--- a/plug-ins/pptp_reneg/pptp_reneg.c
+++ b/plug-ins/pptp_reneg/pptp_reneg.c
@@ -124,7 +124,7 @@ static void parse_ppp(struct packet_object *po)
    struct ppp_header *ppp;
    char tmp[MAX_ASCII_ADDR_LEN];
    
-   /* It's unuseful to modify packets that won't be forwarded */
+   /* It's not useful to modify packets that won't be forwarded */
    if (!(po->flags & PO_FORWARDABLE)) 
       return; 
 
diff --git a/plug-ins/smb_clear/smb_clear.c b/plug-ins/smb_clear/smb_clear.c
index 34b426d..21f3067 100644
--- a/plug-ins/smb_clear/smb_clear.c
+++ b/plug-ins/smb_clear/smb_clear.c
@@ -111,7 +111,7 @@ static void parse_smb(struct packet_object *po)
    u_char *ptr;
    char tmp[MAX_ASCII_ADDR_LEN];
    
-   /* It's unuseful to modify packets that won't be forwarded */
+   /* It's not useful to modify packets that won't be forwarded */
    if (!(po->flags & PO_FORWARDABLE)) 
       return; 
       
diff --git a/plug-ins/smb_down/smb_down.c b/plug-ins/smb_down/smb_down.c
index fe6859a..a691f00 100644
--- a/plug-ins/smb_down/smb_down.c
+++ b/plug-ins/smb_down/smb_down.c
@@ -113,7 +113,7 @@ static void parse_smb(struct packet_object *po)
    u_int32 *Flags;
    char tmp[MAX_ASCII_ADDR_LEN];
    
-   /* It's unuseful to modify packets that won't be forwarded */
+   /* It's not useful to modify packets that won't be forwarded */
    if (!(po->flags & PO_FORWARDABLE)) 
       return; 
       
diff --git a/src/dissectors/ec_mountd.c b/src/dissectors/ec_mountd.c
index e5770fd..784b9f8 100644
--- a/src/dissectors/ec_mountd.c
+++ b/src/dissectors/ec_mountd.c
@@ -61,7 +61,7 @@ FUNC_DECODER(dissector_mountd)
    /* don't complain about unused var */
    (void)end;
 
-   /* skip unuseful packets */
+   /* skip non-useful packets */
    if (PACKET->DATA.len < 24)
       return NULL;
    
diff --git a/src/dissectors/ec_portmap.c b/src/dissectors/ec_portmap.c
index 1336769..8f96459 100644
--- a/src/dissectors/ec_portmap.c
+++ b/src/dissectors/ec_portmap.c
@@ -86,7 +86,7 @@ FUNC_DECODER(dissector_portmap)
    /* don't complain about unused var */
    (void)end;
 
-   /* skip unuseful packets */
+   /* skip non-useful packets */
    if (PACKET->DATA.len < 24)  
       return NULL;
    
diff --git a/src/ec_conntrack.c b/src/ec_conntrack.c
index 69920f7..f7a60cd 100644
--- a/src/ec_conntrack.c
+++ b/src/ec_conntrack.c
@@ -488,7 +488,7 @@ int conntrack_hook_packet_add(struct packet_object *po, void (*func)(struct pack
    /* 
     * if the connection already exist, add the hook function 
     * else create the entry for the connection and add the hook
-    * this is usefull to add hooks for future connections
+    * this is useful to add hooks for future connections
     */
 
    /* create the fake connection */
diff --git a/src/ec_packet.c b/src/ec_packet.c
index 6486d54..a2d60a4 100644
--- a/src/ec_packet.c
+++ b/src/ec_packet.c
@@ -66,7 +66,7 @@ inline int packet_create_object(struct packet_object *po, u_char *buf, size_t le
 /*
  * allocate the buffer for disp data
  *
- * disp data is usefull when the protocol is
+ * disp data is useful when the protocol is
  * encrypted and we want to forward the packet as is
  * but display the decrypted data.
  * decoders should decrypt data from po->DATA.data to po->DATA.disp_data
diff --git a/src/ec_send.c b/src/ec_send.c
index e3b7075..f28b283 100644
--- a/src/ec_send.c
+++ b/src/ec_send.c
@@ -182,7 +182,7 @@ int send_to_iface(struct packet_object *po, struct iface_env *iface)
 
 /*
  * we MUST not sniff packets sent by us at link layer.
- * expecially usefull in bridged sniffing.
+ * expecially useful in bridged sniffing.
  *
  * so we have to find a solution...
  */
diff --git a/src/interfaces/curses/ec_curses_view_connections.c b/src/interfaces/curses/ec_curses_view_connections.c
index 40865ee..d91aa4a 100644
--- a/src/interfaces/curses/ec_curses_view_connections.c
+++ b/src/interfaces/curses/ec_curses_view_connections.c
@@ -240,7 +240,7 @@ static void curses_connection_data_help(void)
 {
    char help[] = "HELP: shortcut list:\n\n"
                  "  ARROWS - switch between panels\n" 
-                 "    j    - switch from splitted to joined view\n"
+                 "    j    - switch from split to joined view\n"
                  "    y    - inject characters interactively\n"
                  "    Y    - inject characters from a file\n"
                  "    k    - kill the connection";
diff --git a/src/protocols/ec_wifi.c b/src/protocols/ec_wifi.c
index b5cb468..c1a9953 100644
--- a/src/protocols/ec_wifi.c
+++ b/src/protocols/ec_wifi.c
@@ -384,17 +384,17 @@ int set_wep_key(u_char *string)
 
    /* sanity check */
    if (bit <= 0)
-      SEMIFATAL_ERROR("Unsupported WEP key lenght");
+      SEMIFATAL_ERROR("Unsupported WEP key length");
 
    /* the len of the secret part of the RC4 seed */
    wlen = bit / 8 - IV_LEN;
    
    /* sanity check */
    if (wlen > sizeof(wkey))
-      SEMIFATAL_ERROR("Unsupported WEP key lenght");
+      SEMIFATAL_ERROR("Unsupported WEP key length");
   
    if (bit != 64 && bit != 128)
-      SEMIFATAL_ERROR("Unsupported WEP key lenght");
+      SEMIFATAL_ERROR("Unsupported WEP key length");
 
    /* get the type of the key */
    p = ec_strtok(NULL, ":", &tok);
@@ -411,7 +411,7 @@ int set_wep_key(u_char *string)
    if (type == 's') {
       /* escape the string and check its lenght */
       if (strescape(wkey, p) != (int)wlen)
-         SEMIFATAL_ERROR("Specified WEP key lenght does not match the given string");
+         SEMIFATAL_ERROR("Specified WEP key length does not match the given string");
    } else if (type == 'p') {
       /* create the key from the passphrase */
       if (bit == 64)
diff --git a/utils/etterlog/el_parser.c b/utils/etterlog/el_parser.c
index 3e821be..f049c88 100644
--- a/utils/etterlog/el_parser.c
+++ b/utils/etterlog/el_parser.c
@@ -57,7 +57,7 @@ void el_usage(void)
    fprintf(stdout, "      -s, --only-source           print packets only from the source\n");
    fprintf(stdout, "      -d, --only-dest             print packets only from the destination\n");
    fprintf(stdout, "  -r, --reverse               reverse the target/connection matching\n");
-   fprintf(stdout, "  -n, --no-headers            skip header informations between packets\n");
+   fprintf(stdout, "  -n, --no-headers            skip header information between packets\n");
    fprintf(stdout, "  -m, --show-mac              show mac addresses in the headers\n");
    fprintf(stdout, "  -k, --color                 colorize the output\n");
    fprintf(stdout, "  -l, --only-local            show only local hosts parsing info files\n");
