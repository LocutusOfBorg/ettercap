## Description: add some description
## Origin/Author: add some origin or author
## Bug: bug URL
commit e57981ed56c04643d5a527897bb60894bf7bd96c
Author: Alexander KÃ¶ppe <format_c@online.de>
Date:   Mon Nov 25 18:49:44 2019 +0100

    Fix changed dependencies on macosx platform (#969)

diff --git a/.travis.yml b/.travis.yml
index 8bcf7596..e57d8f1f 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,6 +43,8 @@ addons:
       - libbsd-dev
       - libcurl4-openssl-dev
       - libgtk2.0-dev
+      - libidn11-dev
+      - librtmp-dev
       - libltdl-dev
       - libluajit-5.1-dev
       - libncurses5-dev
@@ -138,9 +140,10 @@ matrix:
       env: BUILD_ARGS="-DENABLE_GTK=Off -DENABLE_CURSES=Off"
 
 before_install:
-    - if [ ${TRAVIS_OS_NAME} = "osx" ]; then brew update; brew install check curl; brew install groff gtk+ gtk+3; brew install libidn libnet; brew install luajit openssl pcre rtmpdump geoip; fi
+    - if [ ${TRAVIS_OS_NAME} = "osx" ]; then brew update; brew install check curl; brew install groff gtk+ gtk+3 harfbuzz; brew install libidn libnet; brew install luajit openssl pcre rtmpdump geoip; fi
 before_script:
     - if [ ${TRAVIS_OS_NAME} = "osx" ]; then export BUILD_ARGS="$BUILD_ARGS -DOPENSSL_ROOT_DIR=`brew --prefix openssl`";fi
+    - if [ ${TRAVIS_OS_NAME} = "osx" ]; then export BUILD_ARGS="$BUILD_ARGS -DHARFBUZZ_DIR=`brew --prefix harfbuzz`"; fi
 
 script:
   - if [[ "$CC" == "gcc" && "${BUILD_ARGS}" = "" ]]; then git clone https://github.com/richq/cmake-lint.git; cd cmake-lint; python setup.py install --user; cd -; ./misc/cmakelint.sh; fi
diff --git a/cmake/Modules/EttercapLibCheck.cmake b/cmake/Modules/EttercapLibCheck.cmake
index 320fcc47..fa520d73 100644
--- a/cmake/Modules/EttercapLibCheck.cmake
+++ b/cmake/Modules/EttercapLibCheck.cmake
@@ -89,6 +89,15 @@ Please install it, or build against GTK1")
         if(FOUND_GTHREAD)
             set(EC_INTERFACES_LIBS ${EC_INTERFACES_LIBS} ${FOUND_GTHREAD})
         endif()
+        #
+        # harfbuzz is dependent by pango but is not found by
+        # FindGTK3.cmake on MacOS X.
+        # Therefore we try to find it on this platform with a
+        # dedicated FindHARFBUZZ.cmake
+        #
+        find_package(HARFBUZZ)
+        set(EC_INCLUDE ${EC_INCLUDE} ${HARFBUZZ_INCLUDE_DIRS})
+        set(EC_INTERFACE_LIBS ${EC_INTERFACE_LIBS} ${HARFBUZZ_LIBRARRIES})
     else()
         set(EC_INTERFACES_LIBS ${EC_INTERFACES_LIBS} gthread-2.0)
     endif()
diff --git a/cmake/Modules/FindGTK3.cmake b/cmake/Modules/FindGTK3.cmake
index ebbf0400..18dc7a79 100644
--- a/cmake/Modules/FindGTK3.cmake
+++ b/cmake/Modules/FindGTK3.cmake
@@ -3,7 +3,7 @@
 # optional components like gtkmm, glade, and glademm.
 #
 # NOTE: If you intend to use version checking, CMake 2.6.2 or later is
-#       required.
+# required.
 #
 # Specify one or more of the following components
 # as you call this find module. See example below.
@@ -49,6 +49,7 @@
 #=============================================================================
 # Copyright 2009 Kitware, Inc.
 # Copyright 2008-2009 Philip Lowman <philip@yhbt.com>
+# Copyright 2014-2018 Ettercap Development Team <info@ettercap-project.org>
 #
 # Distributed under the OSI-approved BSD License (the "License");
 # see accompanying file Copyright.txt for details.
@@ -65,7 +66,8 @@
 #   * First cut at a GTK3 version (Heavily derived from
 #     FindGTK2.cmake)
 
-
+# Version 0.2 (3/02/2018)
+#   * Run git diff against this file to see all changes
 #=============================================================
 # _GTK3_GET_VERSION
 # Internal function to parse the version number in gtkversion.h
@@ -77,10 +79,20 @@
 function(_GTK3_GET_VERSION _OUT_major _OUT_minor _OUT_micro _gtkversion_hdr)
   file(READ ${_gtkversion_hdr} _contents)
   if(_contents)
-    string(REGEX REPLACE ".*#define GTK_MAJOR_VERSION[ \t]+\\(([0-9]+)\\).*" "\\1" ${_OUT_major} "${_contents}")
-    string(REGEX REPLACE ".*#define GTK_MINOR_VERSION[ \t]+\\(([0-9]+)\\).*" "\\1" ${_OUT_minor} "${_contents}")
-    string(REGEX REPLACE ".*#define GTK_MICRO_VERSION[ \t]+\\(([0-9]+)\\).*" "\\1" ${_OUT_micro} "${_contents}")
+    string(REGEX REPLACE
+      ".*#define GTK_MAJOR_VERSION[ \t]+\\(([0-9]+)\\).*"
+      "\\1" ${_OUT_major} "${_contents}"
+    )
+
+    string(REGEX REPLACE
+      ".*#define GTK_MINOR_VERSION[ \t]+\\(([0-9]+)\\).*"
+      "\\1" ${_OUT_minor} "${_contents}"
+    )
 
+    string(REGEX REPLACE
+      ".*#define GTK_MICRO_VERSION[ \t]+\\(([0-9]+)\\).*"
+      "\\1" ${_OUT_micro} "${_contents}"
+    )
     if(NOT ${_OUT_major} MATCHES "[0-9]+")
       message(FATAL_ERROR "Version parsing failed for GTK3_MAJOR_VERSION!")
     endif()
@@ -146,6 +158,11 @@ function(_GTK3_FIND_INCLUDE_DIR _var _hdr)
 
   find_path(${_var} ${_hdr}
     PATHS
+      # On Windows, glibconfig.h is located
+      # under $PREFIX/lib/glib-2.0/include.
+      C:/GTK/lib/glib-2.0/include
+      C:/msys64/$ENV{MSYSTEM}/lib/glib-2.0
+      # end
       /usr/local/lib64
       /usr/local/lib
       # fix for Ubuntu == 11.04 (Natty Narwhal)
@@ -156,23 +173,16 @@ function(_GTK3_FIND_INCLUDE_DIR _var _hdr)
       /usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}
       # end
       /usr/lib64
-      /usr/lib
-      /opt/gnome/include
-      /opt/gnome/lib
-      /opt/openwin/include
-      /usr/openwin/lib
-      /sw/include
-      /sw/lib
-      /opt/local/include
-      /opt/local/lib
-      $ENV{GTKMM_BASEPATH}/include
-      $ENV{GTKMM_BASEPATH}/lib
-      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]/include
-      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]/lib
-      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]/include
-      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]/lib
+      /usr
+      /opt/gnome
+      /usr/openwin
+      /sw
+      /opt/local
+      $ENV{GTKMM_BASEPATH}
+      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]
+      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]
   PATH_SUFFIXES
-      ${_suffixes}
+      ${_suffixes} include lib
   )
 
   if(${_var})
@@ -242,7 +252,7 @@ function(_GTK3_FIND_LIBRARY _var _lib _expand_vc _append_version)
 
   if(GTK3_DEBUG)
     message(STATUS "[FindGTK3.cmake:${CMAKE_CURRENT_LIST_LINE}]     "
-            "library list = ${_lib_list} and library debug list = ${_libd_list}")
+"library list = ${_lib_list} and library debug list = ${_libd_list}")
   endif()
 
   # For some silly reason the MSVC libraries use _ instead of .
@@ -267,41 +277,45 @@ function(_GTK3_FIND_LIBRARY _var _lib _expand_vc _append_version)
 
   if(GTK3_DEBUG)
     message(STATUS "[FindGTK3.cmake:${CMAKE_CURRENT_LIST_LINE}]     "
-            "While searching for ${_var}, our proposed library list is ${_lib_list}")
+"While searching for ${_var}, our proposed library list is ${_lib_list}")
   endif()
 
   find_library(${_var}
     NAMES ${_lib_list}
     PATHS
-      /opt/gnome/lib
-      /opt/gnome/lib64
-      /usr/openwin/lib
-      /usr/openwin/lib64
-      /sw/lib
-      $ENV{GTKMM_BASEPATH}/lib
-      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]/lib
-      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]/lib
+      /opt/gnome
+      /usr/openwin
+      /sw
+      $ENV{GTKMM_BASEPATH}
+      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]
+      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]
+    PATH_SUFFIXES lib lib64
   )
 
   if(_expand_vc AND MSVC)
     if(GTK3_DEBUG)
       message(STATUS "[FindGTK3.cmake:${CMAKE_CURRENT_LIST_LINE}]     "
-              "While searching for ${_var}_DEBUG our proposed library list is ${_libd_list}")
+"While searching for ${_var}_DEBUG our proposed library list is ${_libd_list}")
     endif()
 
   find_library(${_var}_DEBUG
     NAMES ${_libd_list}
     PATHS
-      $ENV{GTKMM_BASEPATH}/lib
-      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]/lib
-      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]/lib
+      $ENV{GTKMM_BASEPATH}
+      [HKEY_CURRENT_USER\\SOFTWARE\\gtkmm\\2.4;Path]
+      [HKEY_LOCAL_MACHINE\\SOFTWARE\\gtkmm\\2.4;Path]
+    PATH_SUFFIXES lib
   )
 
   if(${_var} AND ${_var}_DEBUG)
     if(NOT GTK3_SKIP_MARK_AS_ADVANCED)
       mark_as_advanced(${_var}_DEBUG)
     endif()
-    set(GTK3_LIBRARIES ${GTK3_LIBRARIES} optimized ${${_var}} debug ${${_var}_DEBUG})
+    set(GTK3_LIBRARIES
+      ${GTK3_LIBRARIES}
+      optimized ${${_var}}
+      debug ${${_var}_DEBUG}
+    )
     set(GTK3_LIBRARIES ${GTK3_LIBRARIES} PARENT_SCOPE)
   endif()
   else()
@@ -332,10 +346,12 @@ if(NOT GTK3_FIND_COMPONENTS)
 endif()
 
 #
-# If specified, enforce version number
+# If not specified, enforce version number
 #
 if(GTK3_FIND_VERSION)
-  cmake_minimum_required(VERSION 2.6.2)
+  if(NOT DEFINED CMAKE_MINIMUM_REQUIRED_VERSION)
+    cmake_minimum_required(VERSION 2.6.2)
+  endif()
   set(GTK3_FAILED_VERSION_CHECK true)
   if(GTK3_DEBUG)
     message(STATUS "[FindGTK3.cmake:${CMAKE_CURRENT_LIST_LINE}] "
@@ -371,10 +387,14 @@ if(GTK3_FIND_VERSION)
     if(GTK3_FIND_REQUIRED AND NOT GTK3_FIND_QUIETLY)
       if(GTK3_FIND_VERSION_EXACT)
         message(FATAL_ERROR "GTK3 version check failed.
-Version ${GTK3_VERSION} was found, version ${GTK3_FIND_VERSION} is needed exactly.")
+Version ${GTK3_VERSION} was found, \
+version ${GTK3_FIND_VERSION} is needed exactly."
+        )
       else()
         message(FATAL_ERROR "GTK3 version check failed.
-Version ${GTK3_VERSION} was found, at least version ${GTK3_FIND_VERSION} is required")
+Version ${GTK3_VERSION} was found, \
+at least version ${GTK3_FIND_VERSION} is required"
+        )
       endif()
     endif()
 
@@ -387,16 +407,22 @@ endif()
 # Find all components
 #
 
-find_package(Freetype)
+find_package(Freetype QUIET)
 list(APPEND GTK3_INCLUDE_DIRS ${FREETYPE_INCLUDE_DIRS})
 list(APPEND GTK3_LIBRARIES ${FREETYPE_LIBRARIES})
 
+find_package(HarfBuzz QUIET)
+list(APPEND GTK3_INCLUDE_DIRS ${HARFBUZZ_INCLUDE_DIRS})
+list(APPEND GTK3_LIBRARIES ${HARFBUZZ_LIBRARIES})
+
 foreach(_GTK3_component ${GTK3_FIND_COMPONENTS})
   if(_GTK3_component STREQUAL "gtk")
     _gtk3_find_include_dir(GTK3_GLIB_INCLUDE_DIR glib.h)
     _gtk3_find_include_dir(GTK3_GLIBCONFIG_INCLUDE_DIR glibconfig.h)
     _gtk3_find_library(GTK3_GLIB_LIBRARY glib false true)
 
+    _gtk3_find_library(GTK3_GTHREAD_LIBRARY gthread false true)
+
     _gtk3_find_include_dir(GTK3_GOBJECT_INCLUDE_DIR gobject/gobject.h)
     _gtk3_find_library(GTK3_GOBJECT_LIBRARY gobject false true)
 
@@ -416,6 +442,18 @@ foreach(_GTK3_component ${GTK3_FIND_COMPONENTS})
       _gtk3_find_library(GTK3_GDK_LIBRARY gdk false true)
       _gtk3_find_library(GTK3_GTK_LIBRARY gtk false true)
     else()
+    # ********* There are various gtk3 builds/packages/bundles
+    # ********* available on Windows. Some of them follow the
+    # ********* classic naming scheme (libs with -win32 suffix)
+    # ********* and others prefer the original names.
+    # ********* Because we want to support as many packages
+    # ********* as possible, we search for both naming styles.
+    # ********* Starting with the original names.
+    # *********
+    # ********* Tested with both vcpkg (gtk+-3.22.19)
+    # ********* and Msys2 (gtk+-3.22.28)
+      _gtk3_find_library(GTK3_GDK_LIBRARY gdk false true)
+      _gtk3_find_library(GTK3_GTK_LIBRARY gtk false true)
       _gtk3_find_library(GTK3_GDK_LIBRARY gdk-win32 false true)
       _gtk3_find_library(GTK3_GTK_LIBRARY gtk-win32 false true)
     endif()
@@ -487,7 +525,10 @@ if(NOT GTK3_FIND_VERSION AND GTK3_GTK_INCLUDE_DIR)
                     GTK3_MINOR_VERSION
                     GTK3_PATCH_VERSION
                     ${GTK3_GTK_INCLUDE_DIR}/gtk/gtkversion.h)
-  set(GTK3_VERSION ${GTK3_MAJOR_VERSION}.${GTK3_MINOR_VERSION}.${GTK3_PATCH_VERSION})
+  set(GTK3_VERSION
+    ${GTK3_MAJOR_VERSION}.${GTK3_MINOR_VERSION}.${GTK3_PATCH_VERSION}
+  )
+
 endif()
 
 #
@@ -503,7 +544,8 @@ foreach(_GTK3_component ${GTK3_FIND_COMPONENTS})
   string(TOUPPER ${_GTK3_component} _COMPONENT_UPPER)
 
   if(_GTK3_component STREQUAL "gtk")
-    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER} "Some or all of the gtk libraries were not found."
+    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER}
+      "Some or all of the gtk libraries were not found."
       GTK3_GTK_LIBRARY
       GTK3_GTK_INCLUDE_DIR
 
@@ -511,12 +553,15 @@ foreach(_GTK3_component ${GTK3_FIND_COMPONENTS})
       GTK3_GLIBCONFIG_INCLUDE_DIR
       GTK3_GLIB_LIBRARY
 
+      GTK3_GTHREAD_LIBRARY
+
       GTK3_GDK_INCLUDE_DIR
       GTK3_GDKCONFIG_INCLUDE_DIR
       GTK3_GDK_LIBRARY
     )
   elseif(_GTK3_component STREQUAL "gtkmm")
-    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER} "Some or all of the gtkmm libraries were not found."
+    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER}
+      "Some or all of the gtkmm libraries were not found."
       GTK3_GTKMM_LIBRARY
       GTK3_GTKMM_INCLUDE_DIR
       GTK3_GTKMMCONFIG_INCLUDE_DIR
@@ -530,12 +575,14 @@ foreach(_GTK3_component ${GTK3_FIND_COMPONENTS})
       GTK3_GDKMM_LIBRARY
     )
   elseif(_GTK3_component STREQUAL "glade")
-    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER} "The glade library was not found."
+    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER}
+      "The glade library was not found."
       GTK3_GLADE_LIBRARY
       GTK3_GLADE_INCLUDE_DIR
     )
   elseif(_GTK3_component STREQUAL "glademm")
-    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER} "The glademm library was not found."
+    find_package_handle_standard_args(GTK3_${_COMPONENT_UPPER}
+      "The glademm library was not found."
       GTK3_GLADEMM_LIBRARY
       GTK3_GLADEMM_INCLUDE_DIR
       GTK3_GLADEMMCONFIG_INCLUDE_DIR
diff --git a/cmake/Modules/FindHARFBUZZ.cmake b/cmake/Modules/FindHARFBUZZ.cmake
new file mode 100644
index 00000000..e2159ba2
--- /dev/null
+++ b/cmake/Modules/FindHARFBUZZ.cmake
@@ -0,0 +1,72 @@
+# Copyright (c) 2012, Intel Corporation
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions are met:
+#
+# * Redistributions of source code must retain the above copyright notice, this
+#   list of conditions and the following disclaimer.
+# * Redistributions in binary form must reproduce the above copyright notice,
+#   this list of conditions and the following disclaimer in the documentation
+#   and/or other materials provided with the distribution.
+# * Neither the name of Intel Corporation nor the names of its contributors may
+#   be used to endorse or promote products derived from this software without
+#   specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+# Try to find Harfbuzz include and library directories.
+#
+# After successful discovery, this will set for inclusion where needed:
+# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers
+# HARFBUZZ_LIBRARIES - containg the HarfBuzz library
+
+include(FindPkgConfig)
+
+pkg_check_modules(PC_HARFBUZZ harfbuzz>=0.9.7)
+
+find_path(HARFBUZZ_INCLUDE_DIRS NAMES hb.h
+    HINTS ${PC_HARFBUZZ_INCLUDE_DIRS} ${PC_HARFBUZZ_INCLUDEDIR}
+)
+
+find_library(HARFBUZZ_LIBRARIES NAMES harfbuzz
+    HINTS ${PC_HARFBUZZ_LIBRARY_DIRS} ${PC_HARFBUZZ_LIBDIR}
+)
+
+# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.
+if("${PC_HARFBUZZ_VERSION}" VERSION_GREATER "0.9.17")
+    if(HarfBuzz_FIND_REQUIRED)
+        set(_HARFBUZZ_REQUIRED REQUIRED)
+    else()
+        set(_HARFBUZZ_REQUIRED "")
+    endif()
+    pkg_check_modules(PC_HARFBUZZ_ICU harfbuzz-icu>=0.9.18 ${_HARFBUZZ_REQUIRED})
+    find_library(HARFBUZZ_ICU_LIBRARIES NAMES harfbuzz-icu
+        HINTS ${PC_HARFBUZZ_ICU_LIBRARY_DIRS} ${PC_HARFBUZZ_ICU_LIBDIR}
+    )
+    if(HARFBUZZ_ICU_LIBRARIES)
+        list(APPEND HARFBUZZ_LIBRARIES "${HARFBUZZ_ICU_LIBRARIES}")
+    endif()
+    set(_HARFBUZZ_EXTRA_REQUIRED_VAR "HARFBUZZ_ICU_LIBRARIES")
+else()
+    set(_HARFBUZZ_EXTRA_REQUIRED_VAR "")
+endif()
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(HarfBuzz DEFAULT_MSG HARFBUZZ_INCLUDE_DIRS
+    HARFBUZZ_LIBRARIES ${_HARFBUZZ_EXTRA_REQUIRED_VAR})
+
+mark_as_advanced(
+    HARFBUZZ_ICU_LIBRARIES
+    HARFBUZZ_INCLUDE_DIRS
+    HARFBUZZ_LIBRARIES
+)
